{"backend_state":"ready","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":20.71129707113475,"memory":37109760},"trust":true,"type":"settings"}
{"exec_count":10,"id":"6dc865","input":"# Let's give this another go\n\n# 1. turn data to nparray\n# 2. cut function\n# 3. Matric calc function\n# 4. best cut function? (include cut direction)\n\n#Imports\nimport pandas as pd\nimport numpy as np\nfrom pandas import DataFrame\nfrom matplotlib import pyplot as plt\n\n# Pulling in the data\nsignal = pd.read_csv('../data/signal_training.dat', sep = \" \")\nbackground = pd.read_csv('../data/background_training.dat', sep = \" \")\nsignaltest = pd.read_csv('../data/signal_data.dat', sep = \" \")\nbackgroundtest = pd.read_csv('../data/background_data.dat', sep = \" \")\n\nsigframe = DataFrame(signal)\nsigarray = sigframe.values\nbacframe = DataFrame(background)\nbacarray = bacframe.values\nsigframetest = DataFrame(signaltest)\nsigarraytest = sigframetest.values\nbacframetest = DataFrame(backgroundtest)\nbacarraytest = bacframetest.values\n\nfulldatanames = list(signal.keys())\ndatanames = list(signal.keys())[3:]\n\ndef matriceval(nsig, nsigkeep, nbackeep):\n    E = nsigkeep / nsig\n    try:\n        R = nsigkeep / (nsigkeep + nbackeep)\n    except ZeroDivisonError:\n        R = 0\n    return(E*R)\n\n#This function is to make the code more readable\ndef emptylist(): \n    return([])\n\n# def arrayificate(dataframe):\n#     headers = list(dataframe.keys())\n#     array = emptylist()\n#     for i in headers:\n#         array.append(dataframe[i])\n#     return(array)\n\ndef cutfunc(list_, cutval, cutdir)\n        col = list_\n        if cutdir == 'R':\n            col[np.greater(dataarray, cutval)]\n        elif cutdir == 'L':\n            col[np.less(dataarray, cutval)]\n    return(col)\n\ndef bestcut(\n","kernel":"python3","pos":0,"scrolled":true,"state":"done","type":"cell"}
{"id":"384c04","input":"","pos":1,"state":"done","type":"cell"}
{"id":0,"time":1554400598320,"type":"user"}
{"last_load":1554225385809,"type":"file"}
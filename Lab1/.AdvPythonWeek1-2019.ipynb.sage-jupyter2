{"backend_state":"running","kernel":"anaconda3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":89264128},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.5.5"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1549289749053,"exec_count":2,"id":"1dcdda","input":"# Define constants\nSpH=900  # J/(kg K)\nRho=2700 # kg/m3\nkap=220  # W/(m K)\n\n# Define parameters of the problem\nBarL=0.3 # m\nT0=100.  # C\n\n# import statements\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n","kernel":"anaconda3","pos":2,"start":1549289749047,"state":"done","type":"cell"}
{"cell_type":"code","end":1549290541526,"exec_count":13,"id":"02cc94","input":"# Complete the code below for the Nth term\n# n-th term calculation. Here we pass an array in x and return an array in y. \ndef TTermN(xs,t,n):\n    an = (n*np.pi/BarL)\n    return ((4*T0)/n*np.pi)*np.sin(an*xs)*np.exp(-((an**2)*kap*t)/(SpH*Rho))\n\ndef Tarray(xs, t):\n    n = np.arange(1, 100, 2)\n    an = (n*np.pi/BarL)\n    T = ((4*T0)/n*np.pi)*np.sin(an*xs)*np.exp(-((an**2)*kap*t)/(SpH*Rho))\n    return(Tarray)\n\ndef Tsum(xs, t):\n    Tsum = np.sum(Tarray(xs, t))\n    return(Tsum)\n\n\nxs=np.linspace(0, BarL)\n\nplt.scatter(xs, TTermN(xs,0,1), label = 'n=1')\nplt.scatter(xs, TTermN(xs,0,3), label = 'n=3')\nplt.scatter(xs, TTermN(xs,0,5), label = 'n=5')\nplt.legend()\nplt.show()\n\n\nplt.scatter(xs, TTermN(xs,20,1), label = 'n=1')\nplt.scatter(xs, TTermN(xs,20,3), label = 'n=3')\nplt.scatter(xs, TTermN(xs,20,5), label = 'n=5')\nplt.legend()\nplt.show()\n\nprint(Tarray(4, 0))\n\n#plt.scatter(xs, Tsum(xs, 0))\n#plt.show()\n#plt.scatter(xs, Tsum(xs, 20))\n#plt.show()\n#plt.scatter(xs, Tsum(xs, 100))\n#plt.show()\n\nprint(\"HIGH N GIVES SMALL T\")\n","kernel":"anaconda3","output":{"0":{"data":{"image/png":"50aff67bf3fd26edeeae67695b956bed82645d65"},"metadata":{"image/png":{"height":250,"width":385}}},"1":{"data":{"image/png":"8d233f5f86586f6b9c0064e5c875b5b21e17d993"},"metadata":{"image/png":{"height":250,"width":383}}},"2":{"name":"stdout","text":"<function Tarray at 0x7feedaee4a60>\nHIGH N GIVES SMALL T\n"}},"pos":3,"start":1549290540288,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"a7fb85","input":"## Question: Sum the members of the series and produce a few plots\nThis exercise will jog your memory on how to add vectors, write a function, plot a few graphs. These are all basic python skills that you have developed in your previous courses.\n\nThe analytical solution is presented as an infinite serie of terms. \n- Write a function that calculates $T_n(x,t)$, e.g. the n-th term of the serie as a function of $x$ and $t$. You should pass an array for x, so this can be used for the calculations and plots in the questions below\n- Plot two graphs, each with the first three terms of the serie (n=1,3,5) in different colours. One graph for for t=0s and one for t=20s. Choose an appropriate number of points along $x$. How does the maximum $T$ depend on $n$ for $t=20s$? Why?  \n- Add the first 50 terms (up to $n=99$) of the serie and plot a graph of $T(x,t)$ for t=0, 20, 100 s. If enough points are used in the $x$ coordinate a ripple is visible in the graph for $t=0$ s. Explain this. \n- Produce a 3D plot showing $T(x,t)$ for t up to 100 s, when adding the first 50 terms. Plot as a wireframe and as a colour temperature map","pos":1,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"be1663","input":"# The Heat equation - part 1\n\n## A few theoretical remarks\nHeat propagation is described by the differential equation (for a one-dimensional system)\n$$\\frac{\\partial T(x,t)}{\\partial t} = \\frac{k}{C \\rho} \\frac{\\partial^2 T(x,t)}{\\partial x^2},$$\nwhich describes the variation of temperature ($T$) as a function of a coordinate ($x$) and time ($t$).  $k$ is the thermal conductivity, $C$ is the heat capacity and $\\rho$ the density of a material.\n\nAn analytical solution can be found by separating the variables $x$ and $t$\n$$T(x,t)=X(x)\\cal{T} (t)$$\nSubstituting into the original equation, we can rewrite this as two non-coupled ordinary differential equations (ODE) as a function of the $t$ and $x$ variables.\n$$\\frac{d \\cal{T}}{dt} (t) + \\alpha^2 \\frac{k}{C \\rho} {\\cal T}(t) = 0, \\ \\ \\ \\ \\frac{d^2 X}{d x^2}(x) + \\alpha^2 X(x)=0,$$\nwhere $\\alpha$ is a real number. These are ordinary differential equations, the solutions can be found for set values of $\\alpha$. When multiple values of $\\alpha$ are allowed, the corresponding solutions need to be added up.\n\nFor this project we consider a bar of length $L=0.3$ m with the boundary conditions $T(0,t)=T(L,t)=0$ C, e.g. with the two edges kept at a constant temperature of 0 C. We also assume the initial condition $T(x,0)=T_0=100$C for 0<x<L.\n\nThe boundary condition requires a solution for $X(x)$ of the type:\n$$X(x)=\\sin \\alpha_n x \\ \\ \\mbox{with} \\ \\ \\alpha_n=n \\pi/L$$\nConsequently the solution for $\\cal{T}(t)$ is written in the form:\n$${\\cal T}(t)=\\exp{\\left( -\\frac{\\alpha_n^2 kt}{C \\rho} \\right) } $$\nWhich leads to the generic solution\n$$T(x,t) = \\sum_{n=1}^{\\infty} A_n \\sin (\\alpha_n x) \\exp{\\left( -\\frac{\\alpha_n^2 kt}{C \\rho} \\right) }, $$\n\nTo satisfy the initial condition, we can derive the factors $A_n$ of the Fourier serie and write the analytical solution as\n$$T(x,t) = \\sum_{n=1, 3, 5, ...}^{\\infty} T_n(x,t) = \\sum_{n=1, 3, 5, ...}^{\\infty} \\frac{4T_0}{n \\pi} \\sin (\\alpha_n x) \\exp{\\left( -\\frac{\\alpha_n^2 kt}{C \\rho} \\right) }, $$\n\n\nIn your numerical implementation use Aluminium as a metal with heat conductivity $k=220$ W/(m K), density $\\rho=2700$ kg/m$^3$ and specific heat $C=900$ J/(kg K). \n\nPlease **note**, for simplicity we use temperatures in Celsius. Using Kelvin would require adding a constant of T=273.16K, which, being a constant, would disappear from the differential equation.\n\n","pos":0,"state":"done","type":"cell"}
{"id":"507340","input":"","pos":4,"state":"done","type":"cell"}
{"id":0,"time":1551098102679,"type":"user"}
{"last_load":1549275980065,"type":"file"}